//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CourseworkExcersise4PartA.Webref1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="AreaUnitSoap", Namespace="http://www.webserviceX.NET/")]
    public partial class AreaUnit : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback ChangeAreaUnitOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AreaUnit() {
            this.Url = global::CourseworkExcersise4PartA.Properties.Settings.Default.CourseworkExcersise4PartA_Webref1_AreaUnit;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event ChangeAreaUnitCompletedEventHandler ChangeAreaUnitCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/ChangeAreaUnit", RequestNamespace="http://www.webserviceX.NET/", ResponseNamespace="http://www.webserviceX.NET/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double ChangeAreaUnit(double AreaValue, Areas fromAreaUnit, Areas toAreaUnit) {
            object[] results = this.Invoke("ChangeAreaUnit", new object[] {
                        AreaValue,
                        fromAreaUnit,
                        toAreaUnit});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeAreaUnitAsync(double AreaValue, Areas fromAreaUnit, Areas toAreaUnit) {
            this.ChangeAreaUnitAsync(AreaValue, fromAreaUnit, toAreaUnit, null);
        }
        
        /// <remarks/>
        public void ChangeAreaUnitAsync(double AreaValue, Areas fromAreaUnit, Areas toAreaUnit, object userState) {
            if ((this.ChangeAreaUnitOperationCompleted == null)) {
                this.ChangeAreaUnitOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeAreaUnitOperationCompleted);
            }
            this.InvokeAsync("ChangeAreaUnit", new object[] {
                        AreaValue,
                        fromAreaUnit,
                        toAreaUnit}, this.ChangeAreaUnitOperationCompleted, userState);
        }
        
        private void OnChangeAreaUnitOperationCompleted(object arg) {
            if ((this.ChangeAreaUnitCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeAreaUnitCompleted(this, new ChangeAreaUnitCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1586.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.webserviceX.NET/")]
    public enum Areas {
        
        /// <remarks/>
        acre,
        
        /// <remarks/>
        acrecommercial,
        
        /// <remarks/>
        acreIreland,
        
        /// <remarks/>
        acresurvey,
        
        /// <remarks/>
        are,
        
        /// <remarks/>
        baseboxtinplatedsteel,
        
        /// <remarks/>
        binTaiwan,
        
        /// <remarks/>
        buJapan,
        
        /// <remarks/>
        canteroEcuador,
        
        /// <remarks/>
        caoVietnam,
        
        /// <remarks/>
        centaire,
        
        /// <remarks/>
        circularfootinternational,
        
        /// <remarks/>
        circularfootUSsurvey,
        
        /// <remarks/>
        circularinchinternational,
        
        /// <remarks/>
        circularinchUSsurvey,
        
        /// <remarks/>
        hectare,
        
        /// <remarks/>
        laborCanada,
        
        /// <remarks/>
        laborUSsurvey,
        
        /// <remarks/>
        manzanaCostaRican,
        
        /// <remarks/>
        manzanaArgentina,
        
        /// <remarks/>
        rood,
        
        /// <remarks/>
        saoVietnam,
        
        /// <remarks/>
        scrupleancientRome,
        
        /// <remarks/>
        sectionUSsurvey,
        
        /// <remarks/>
        square,
        
        /// <remarks/>
        squareSriLanka,
        
        /// <remarks/>
        squareangstrom,
        
        /// <remarks/>
        squareastronomicalunit,
        
        /// <remarks/>
        squarecablelengthUSsurvey,
        
        /// <remarks/>
        squarecaliber,
        
        /// <remarks/>
        squarecentimeter,
        
        /// <remarks/>
        squarechainGunterUSsurvey,
        
        /// <remarks/>
        squarechainRamdenEngineer,
        
        /// <remarks/>
        squarecubit,
        
        /// <remarks/>
        squarecubitancientEgypt,
        
        /// <remarks/>
        squaredigit,
        
        /// <remarks/>
        squarefathom,
        
        /// <remarks/>
        squarefootinternational,
        
        /// <remarks/>
        squarefootUSsurvey,
        
        /// <remarks/>
        squarefurlongUSsurvey,
        
        /// <remarks/>
        squaregigameter,
        
        /// <remarks/>
        squarehectometer,
        
        /// <remarks/>
        squareinchinternational,
        
        /// <remarks/>
        squareinchUSsurvey,
        
        /// <remarks/>
        squarekilometer,
        
        /// <remarks/>
        squareleaguenautical,
        
        /// <remarks/>
        squareleagueUSstatute,
        
        /// <remarks/>
        squarelightyear,
        
        /// <remarks/>
        squarelinkGunterUSsurvey,
        
        /// <remarks/>
        squarelinkRamdenEngineer,
        
        /// <remarks/>
        squaremegameter,
        
        /// <remarks/>
        squaremeter,
        
        /// <remarks/>
        squaremicroinch,
        
        /// <remarks/>
        squaremicrometer,
        
        /// <remarks/>
        squaremicromicron,
        
        /// <remarks/>
        squaremicron,
        
        /// <remarks/>
        squaremil,
        
        /// <remarks/>
        squaremileinternational,
        
        /// <remarks/>
        squaremileintnautical,
        
        /// <remarks/>
        squaremileUSnautical,
        
        /// <remarks/>
        squaremileUSstatute,
        
        /// <remarks/>
        squaremileUSsurvey,
        
        /// <remarks/>
        squaremillimeter,
        
        /// <remarks/>
        squaremillimicron,
        
        /// <remarks/>
        squarenanometer,
        
        /// <remarks/>
        squareParisfootCanada,
        
        /// <remarks/>
        squareparsec,
        
        /// <remarks/>
        squareperchIreland,
        
        /// <remarks/>
        squareperchUSsurvey,
        
        /// <remarks/>
        squarepetameter,
        
        /// <remarks/>
        squarepicometer,
        
        /// <remarks/>
        squarerodNetherlands,
        
        /// <remarks/>
        squaretenthmeter,
        
        /// <remarks/>
        squareyardUSsurvey,
        
        /// <remarks/>
        squareyardinternational,
        
        /// <remarks/>
        squareyoctometer,
        
        /// <remarks/>
        squareyottameter,
        
        /// <remarks/>
        squarezeptometer,
        
        /// <remarks/>
        squarezettameter,
        
        /// <remarks/>
        townshipUSsurvey,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void ChangeAreaUnitCompletedEventHandler(object sender, ChangeAreaUnitCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeAreaUnitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeAreaUnitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591