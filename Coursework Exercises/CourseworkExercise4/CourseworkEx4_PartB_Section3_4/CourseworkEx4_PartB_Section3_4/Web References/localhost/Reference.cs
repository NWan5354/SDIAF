//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CourseworkEx4_PartB_Section3_4.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CurrencyExchangeSoap", Namespace="http://tempuri.org/")]
    public partial class CurrencyExchange : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyGBPtoUSDollarOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyGBPtoSouthAfricaOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyGBPtoSingaporeDollarOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyGBPtoHongKongDollarOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyGBPtoFranceEuroOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyGBPtoGermanyEuroOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyGBPtoIndiaRupeeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CurrencyGBPtoDenmarkDanishKroneOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CurrencyExchange() {
            this.Url = global::CourseworkEx4_PartB_Section3_4.Properties.Settings.Default.CourseworkEx4_PartB_Section3_4_localhost_CurrencyExchange;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event CurrencyGBPtoUSDollarCompletedEventHandler CurrencyGBPtoUSDollarCompleted;
        
        /// <remarks/>
        public event CurrencyGBPtoSouthAfricaCompletedEventHandler CurrencyGBPtoSouthAfricaCompleted;
        
        /// <remarks/>
        public event CurrencyGBPtoSingaporeDollarCompletedEventHandler CurrencyGBPtoSingaporeDollarCompleted;
        
        /// <remarks/>
        public event CurrencyGBPtoHongKongDollarCompletedEventHandler CurrencyGBPtoHongKongDollarCompleted;
        
        /// <remarks/>
        public event CurrencyGBPtoFranceEuroCompletedEventHandler CurrencyGBPtoFranceEuroCompleted;
        
        /// <remarks/>
        public event CurrencyGBPtoGermanyEuroCompletedEventHandler CurrencyGBPtoGermanyEuroCompleted;
        
        /// <remarks/>
        public event CurrencyGBPtoIndiaRupeeCompletedEventHandler CurrencyGBPtoIndiaRupeeCompleted;
        
        /// <remarks/>
        public event CurrencyGBPtoDenmarkDanishKroneCompletedEventHandler CurrencyGBPtoDenmarkDanishKroneCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CurrencyGBPtoUSDollar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double CurrencyGBPtoUSDollar(double exchange) {
            object[] results = this.Invoke("CurrencyGBPtoUSDollar", new object[] {
                        exchange});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyGBPtoUSDollarAsync(double exchange) {
            this.CurrencyGBPtoUSDollarAsync(exchange, null);
        }
        
        /// <remarks/>
        public void CurrencyGBPtoUSDollarAsync(double exchange, object userState) {
            if ((this.CurrencyGBPtoUSDollarOperationCompleted == null)) {
                this.CurrencyGBPtoUSDollarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyGBPtoUSDollarOperationCompleted);
            }
            this.InvokeAsync("CurrencyGBPtoUSDollar", new object[] {
                        exchange}, this.CurrencyGBPtoUSDollarOperationCompleted, userState);
        }
        
        private void OnCurrencyGBPtoUSDollarOperationCompleted(object arg) {
            if ((this.CurrencyGBPtoUSDollarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyGBPtoUSDollarCompleted(this, new CurrencyGBPtoUSDollarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CurrencyGBPtoSouthAfrica", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double CurrencyGBPtoSouthAfrica(double exchange) {
            object[] results = this.Invoke("CurrencyGBPtoSouthAfrica", new object[] {
                        exchange});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyGBPtoSouthAfricaAsync(double exchange) {
            this.CurrencyGBPtoSouthAfricaAsync(exchange, null);
        }
        
        /// <remarks/>
        public void CurrencyGBPtoSouthAfricaAsync(double exchange, object userState) {
            if ((this.CurrencyGBPtoSouthAfricaOperationCompleted == null)) {
                this.CurrencyGBPtoSouthAfricaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyGBPtoSouthAfricaOperationCompleted);
            }
            this.InvokeAsync("CurrencyGBPtoSouthAfrica", new object[] {
                        exchange}, this.CurrencyGBPtoSouthAfricaOperationCompleted, userState);
        }
        
        private void OnCurrencyGBPtoSouthAfricaOperationCompleted(object arg) {
            if ((this.CurrencyGBPtoSouthAfricaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyGBPtoSouthAfricaCompleted(this, new CurrencyGBPtoSouthAfricaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CurrencyGBPtoSingaporeDollar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double CurrencyGBPtoSingaporeDollar(double exchange) {
            object[] results = this.Invoke("CurrencyGBPtoSingaporeDollar", new object[] {
                        exchange});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyGBPtoSingaporeDollarAsync(double exchange) {
            this.CurrencyGBPtoSingaporeDollarAsync(exchange, null);
        }
        
        /// <remarks/>
        public void CurrencyGBPtoSingaporeDollarAsync(double exchange, object userState) {
            if ((this.CurrencyGBPtoSingaporeDollarOperationCompleted == null)) {
                this.CurrencyGBPtoSingaporeDollarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyGBPtoSingaporeDollarOperationCompleted);
            }
            this.InvokeAsync("CurrencyGBPtoSingaporeDollar", new object[] {
                        exchange}, this.CurrencyGBPtoSingaporeDollarOperationCompleted, userState);
        }
        
        private void OnCurrencyGBPtoSingaporeDollarOperationCompleted(object arg) {
            if ((this.CurrencyGBPtoSingaporeDollarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyGBPtoSingaporeDollarCompleted(this, new CurrencyGBPtoSingaporeDollarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CurrencyGBPtoHongKongDollar", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double CurrencyGBPtoHongKongDollar(double exchange) {
            object[] results = this.Invoke("CurrencyGBPtoHongKongDollar", new object[] {
                        exchange});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyGBPtoHongKongDollarAsync(double exchange) {
            this.CurrencyGBPtoHongKongDollarAsync(exchange, null);
        }
        
        /// <remarks/>
        public void CurrencyGBPtoHongKongDollarAsync(double exchange, object userState) {
            if ((this.CurrencyGBPtoHongKongDollarOperationCompleted == null)) {
                this.CurrencyGBPtoHongKongDollarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyGBPtoHongKongDollarOperationCompleted);
            }
            this.InvokeAsync("CurrencyGBPtoHongKongDollar", new object[] {
                        exchange}, this.CurrencyGBPtoHongKongDollarOperationCompleted, userState);
        }
        
        private void OnCurrencyGBPtoHongKongDollarOperationCompleted(object arg) {
            if ((this.CurrencyGBPtoHongKongDollarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyGBPtoHongKongDollarCompleted(this, new CurrencyGBPtoHongKongDollarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CurrencyGBPtoFranceEuro", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double CurrencyGBPtoFranceEuro(double exchange) {
            object[] results = this.Invoke("CurrencyGBPtoFranceEuro", new object[] {
                        exchange});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyGBPtoFranceEuroAsync(double exchange) {
            this.CurrencyGBPtoFranceEuroAsync(exchange, null);
        }
        
        /// <remarks/>
        public void CurrencyGBPtoFranceEuroAsync(double exchange, object userState) {
            if ((this.CurrencyGBPtoFranceEuroOperationCompleted == null)) {
                this.CurrencyGBPtoFranceEuroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyGBPtoFranceEuroOperationCompleted);
            }
            this.InvokeAsync("CurrencyGBPtoFranceEuro", new object[] {
                        exchange}, this.CurrencyGBPtoFranceEuroOperationCompleted, userState);
        }
        
        private void OnCurrencyGBPtoFranceEuroOperationCompleted(object arg) {
            if ((this.CurrencyGBPtoFranceEuroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyGBPtoFranceEuroCompleted(this, new CurrencyGBPtoFranceEuroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CurrencyGBPtoGermanyEuro", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double CurrencyGBPtoGermanyEuro(double exchange) {
            object[] results = this.Invoke("CurrencyGBPtoGermanyEuro", new object[] {
                        exchange});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyGBPtoGermanyEuroAsync(double exchange) {
            this.CurrencyGBPtoGermanyEuroAsync(exchange, null);
        }
        
        /// <remarks/>
        public void CurrencyGBPtoGermanyEuroAsync(double exchange, object userState) {
            if ((this.CurrencyGBPtoGermanyEuroOperationCompleted == null)) {
                this.CurrencyGBPtoGermanyEuroOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyGBPtoGermanyEuroOperationCompleted);
            }
            this.InvokeAsync("CurrencyGBPtoGermanyEuro", new object[] {
                        exchange}, this.CurrencyGBPtoGermanyEuroOperationCompleted, userState);
        }
        
        private void OnCurrencyGBPtoGermanyEuroOperationCompleted(object arg) {
            if ((this.CurrencyGBPtoGermanyEuroCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyGBPtoGermanyEuroCompleted(this, new CurrencyGBPtoGermanyEuroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CurrencyGBPtoIndiaRupee", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double CurrencyGBPtoIndiaRupee(double exchange) {
            object[] results = this.Invoke("CurrencyGBPtoIndiaRupee", new object[] {
                        exchange});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyGBPtoIndiaRupeeAsync(double exchange) {
            this.CurrencyGBPtoIndiaRupeeAsync(exchange, null);
        }
        
        /// <remarks/>
        public void CurrencyGBPtoIndiaRupeeAsync(double exchange, object userState) {
            if ((this.CurrencyGBPtoIndiaRupeeOperationCompleted == null)) {
                this.CurrencyGBPtoIndiaRupeeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyGBPtoIndiaRupeeOperationCompleted);
            }
            this.InvokeAsync("CurrencyGBPtoIndiaRupee", new object[] {
                        exchange}, this.CurrencyGBPtoIndiaRupeeOperationCompleted, userState);
        }
        
        private void OnCurrencyGBPtoIndiaRupeeOperationCompleted(object arg) {
            if ((this.CurrencyGBPtoIndiaRupeeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyGBPtoIndiaRupeeCompleted(this, new CurrencyGBPtoIndiaRupeeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CurrencyGBPtoDenmarkDanishKrone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public double CurrencyGBPtoDenmarkDanishKrone(double exchange) {
            object[] results = this.Invoke("CurrencyGBPtoDenmarkDanishKrone", new object[] {
                        exchange});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void CurrencyGBPtoDenmarkDanishKroneAsync(double exchange) {
            this.CurrencyGBPtoDenmarkDanishKroneAsync(exchange, null);
        }
        
        /// <remarks/>
        public void CurrencyGBPtoDenmarkDanishKroneAsync(double exchange, object userState) {
            if ((this.CurrencyGBPtoDenmarkDanishKroneOperationCompleted == null)) {
                this.CurrencyGBPtoDenmarkDanishKroneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCurrencyGBPtoDenmarkDanishKroneOperationCompleted);
            }
            this.InvokeAsync("CurrencyGBPtoDenmarkDanishKrone", new object[] {
                        exchange}, this.CurrencyGBPtoDenmarkDanishKroneOperationCompleted, userState);
        }
        
        private void OnCurrencyGBPtoDenmarkDanishKroneOperationCompleted(object arg) {
            if ((this.CurrencyGBPtoDenmarkDanishKroneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CurrencyGBPtoDenmarkDanishKroneCompleted(this, new CurrencyGBPtoDenmarkDanishKroneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CurrencyGBPtoUSDollarCompletedEventHandler(object sender, CurrencyGBPtoUSDollarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyGBPtoUSDollarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyGBPtoUSDollarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CurrencyGBPtoSouthAfricaCompletedEventHandler(object sender, CurrencyGBPtoSouthAfricaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyGBPtoSouthAfricaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyGBPtoSouthAfricaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CurrencyGBPtoSingaporeDollarCompletedEventHandler(object sender, CurrencyGBPtoSingaporeDollarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyGBPtoSingaporeDollarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyGBPtoSingaporeDollarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CurrencyGBPtoHongKongDollarCompletedEventHandler(object sender, CurrencyGBPtoHongKongDollarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyGBPtoHongKongDollarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyGBPtoHongKongDollarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CurrencyGBPtoFranceEuroCompletedEventHandler(object sender, CurrencyGBPtoFranceEuroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyGBPtoFranceEuroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyGBPtoFranceEuroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CurrencyGBPtoGermanyEuroCompletedEventHandler(object sender, CurrencyGBPtoGermanyEuroCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyGBPtoGermanyEuroCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyGBPtoGermanyEuroCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CurrencyGBPtoIndiaRupeeCompletedEventHandler(object sender, CurrencyGBPtoIndiaRupeeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyGBPtoIndiaRupeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyGBPtoIndiaRupeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    public delegate void CurrencyGBPtoDenmarkDanishKroneCompletedEventHandler(object sender, CurrencyGBPtoDenmarkDanishKroneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1586.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CurrencyGBPtoDenmarkDanishKroneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CurrencyGBPtoDenmarkDanishKroneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591